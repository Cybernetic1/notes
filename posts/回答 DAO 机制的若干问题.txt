回答问题：
1）这个问题不妨称为“垃圾贡献攻击”(junk contributions attack).  首先起码有一个有真实贡献的人，他获得贡献值 (contribution value, CV) 之后，再 up-vote 其他垃圾人的垃圾贡献。 这个‘攻击算法’成功的特点是：贡献网络形成“孤岛”，其实可以有方程式 detect，我们可以将 detection写进系统，但不一定执行，而是发出警告。


2）我认为，权重 其实就是 贡献值 (CV).  这是唯一 make sense 的方法。权威者的出现不一定是坏事，但我们可以用 曲线函数将 CV 的分配平均化一些，避免 CV 值出现极端。


3）谁决定一个 sub-task 的总CV值？似乎应该由 parent-task 的成员决定。 但这个估计可能有误差。 另一个做法是由 sub-task 的成员提出，由 parent-task 或其他成员决定是否接受。 我觉得后者更符合 DAO 精神。即是说，任何 sub-task 可以“狮子开大口”。 软件收费的时候，如果使用者用了这个 module，他就付这个 module 的钱（或者说，他付的钱 以他使用的 modules 的 CV 比例分配）。 如果有成员嫌这个 module 贵（抢去了他们的贡献值 的份额），他们就有动机去写一个更便宜的替代品。 


4）当 使用者／消费者 付钱的时候，就可以立即分配利润给贡献者，按照那一时刻的 CV 值的比例。 我觉得这是合理的。 


4B) 另一个问题是 投资者，他不同于 consumer（消费者），因为投资者是在未有产品的时候已经投资，他是付出现金 换取 CV 值。 问题是：
    4B1）这现金如何分配给 开发者？  投资者可以投资给整个项目或某个 sub-task，那就是由 项目/sub-task 的完成者享有，根据他们的 CV 值比例。
    4B2）投资者获得的 CV 值如何计算？ 根据 CV ≈ 传统公司股份 的原理，投资者获得的 CV 值应该根据 项目的估值计算，也就是项目长期盈利的期望值（或其 “present value”）。 


5）对 CV 值的评估‘浮动’。 这是合理的提问。 情况有点像股票，它的价格可以浮动。 一个“contrib”的 价值 可以不同于另一个 contrib，就像 一家公司的股票价值不同于另一家。 现时机制是：贡献者自己提出 CV 值，其他人投票认可度，最后得出的 CV 值根据认可度计算。如果认可度很低，他实际得到的 CV 比他提出的少。 CV 值的变化 就是源于 认可度的变化。 有方法是，保留一部分利润 不是即时分配。另一个角度看，CV 类似传统公司股份，但 CV 的占比可以浮动。 这会是一种新的金融商品。 


6）分配规则背后的 principle 是“按功劳分配”(meritocracy).
